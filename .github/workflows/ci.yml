name: build and test codebase

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  schedule:
    - cron:  '0 0 */3 * *'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install go and test
        run: |
          sudo add-apt-repository ppa:longsleep/golang-backports
          sudo apt-get update -y
          sudo apt-get install -y golang-go
          make

  gool:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm/v7, linux/arm64, linux/ppc64le, linux/s390x, linux/386, linux/arm/v5, linux/mips64le, linux/riscv64]
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build all targets
        run: |
          docker buildx build --progress plain --platform ${{ matrix.platform }} --tag ${{ secrets.DOCKERHUB_ACCOUNT }}/gool:pr-test -f docker/Dockerfile.gool .
          
  geth:
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build all targets
        run: |
          
          docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64,linux/386 --tag ${{ secrets.DOCKERHUB_ACCOUNT }}/geth:pr-test -f docker/Dockerfile.geth .

  bitcoind:
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build all targets
        run: |
          PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64
          docker buildx build --platform $PLATFORMS --tag ${{ secrets.DOCKERHUB_ACCOUNT }}/bitcoin-core:pr-test -f docker/Dockerfile.bitcoin-core .

  waves:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build all targets
        run: |
          docker/build-waves.sh ${{ matrix.platform }} ${{ secrets.DOCKERHUB_ACCOUNT }} pr-test

  neo:
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build all targets
        run: |
          docker/build-neo.sh linux/amd64,linux/arm/v7,linux/arm64 ${{ secrets.DOCKERHUB_ACCOUNT }} pr-test

  lisk:
    needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build all targets
        run: |
          docker/build-lisk.sh linux/amd64 ${{ secrets.DOCKERHUB_ACCOUNT }} pr-test
