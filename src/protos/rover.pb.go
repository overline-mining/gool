// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: rover.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoverMessageType int32

const (
	RoverMessageType_FetchBlock        RoverMessageType = 0
	RoverMessageType_RequestResync     RoverMessageType = 1
	RoverMessageType_rover_block_range RoverMessageType = 2
	RoverMessageType_LatestBlock       RoverMessageType = 3
)

// Enum value maps for RoverMessageType.
var (
	RoverMessageType_name = map[int32]string{
		0: "FetchBlock",
		1: "RequestResync",
		2: "rover_block_range",
		3: "LatestBlock",
	}
	RoverMessageType_value = map[string]int32{
		"FetchBlock":        0,
		"RequestResync":     1,
		"rover_block_range": 2,
		"LatestBlock":       3,
	}
)

func (x RoverMessageType) Enum() *RoverMessageType {
	p := new(RoverMessageType)
	*p = x
	return p
}

func (x RoverMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoverMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_rover_proto_enumTypes[0].Descriptor()
}

func (RoverMessageType) Type() protoreflect.EnumType {
	return &file_rover_proto_enumTypes[0]
}

func (x RoverMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoverMessageType.Descriptor instead.
func (RoverMessageType) EnumDescriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{0}
}

type RoverIdent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoverName string `protobuf:"bytes,1,opt,name=rover_name,json=roverName,proto3" json:"rover_name,omitempty"`
}

func (x *RoverIdent) Reset() {
	*x = RoverIdent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverIdent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverIdent) ProtoMessage() {}

func (x *RoverIdent) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverIdent.ProtoReflect.Descriptor instead.
func (*RoverIdent) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{0}
}

func (x *RoverIdent) GetRoverName() string {
	if x != nil {
		return x.RoverName
	}
	return ""
}

type RoverSyncStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoverName string `protobuf:"bytes,1,opt,name=rover_name,json=roverName,proto3" json:"rover_name,omitempty"`
	Status    bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoverSyncStatus) Reset() {
	*x = RoverSyncStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverSyncStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverSyncStatus) ProtoMessage() {}

func (x *RoverSyncStatus) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverSyncStatus.ProtoReflect.Descriptor instead.
func (*RoverSyncStatus) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{1}
}

func (x *RoverSyncStatus) GetRoverName() string {
	if x != nil {
		return x.RoverName
	}
	return ""
}

func (x *RoverSyncStatus) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type RoverMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type RoverMessageType `protobuf:"varint,1,opt,name=type,proto3,enum=bc.rover.RoverMessageType" json:"type,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*RoverMessage_Resync_
	//	*RoverMessage_FetchBlock_
	//	*RoverMessage_RoverBlockRange_
	//	*RoverMessage_LatestBlock_
	Payload isRoverMessage_Payload `protobuf_oneof:"payload"`
}

func (x *RoverMessage) Reset() {
	*x = RoverMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverMessage) ProtoMessage() {}

func (x *RoverMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverMessage.ProtoReflect.Descriptor instead.
func (*RoverMessage) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{2}
}

func (x *RoverMessage) GetType() RoverMessageType {
	if x != nil {
		return x.Type
	}
	return RoverMessageType_FetchBlock
}

func (m *RoverMessage) GetPayload() isRoverMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RoverMessage) GetResync() *RoverMessage_Resync {
	if x, ok := x.GetPayload().(*RoverMessage_Resync_); ok {
		return x.Resync
	}
	return nil
}

func (x *RoverMessage) GetFetchBlock() *RoverMessage_FetchBlock {
	if x, ok := x.GetPayload().(*RoverMessage_FetchBlock_); ok {
		return x.FetchBlock
	}
	return nil
}

func (x *RoverMessage) GetRoverBlockRange() *RoverMessage_RoverBlockRange {
	if x, ok := x.GetPayload().(*RoverMessage_RoverBlockRange_); ok {
		return x.RoverBlockRange
	}
	return nil
}

func (x *RoverMessage) GetLatestBlock() *RoverMessage_LatestBlock {
	if x, ok := x.GetPayload().(*RoverMessage_LatestBlock_); ok {
		return x.LatestBlock
	}
	return nil
}

type isRoverMessage_Payload interface {
	isRoverMessage_Payload()
}

type RoverMessage_Resync_ struct {
	Resync *RoverMessage_Resync `protobuf:"bytes,2,opt,name=resync,proto3,oneof"`
}

type RoverMessage_FetchBlock_ struct {
	FetchBlock *RoverMessage_FetchBlock `protobuf:"bytes,3,opt,name=fetch_block,json=fetchBlock,proto3,oneof"`
}

type RoverMessage_RoverBlockRange_ struct {
	RoverBlockRange *RoverMessage_RoverBlockRange `protobuf:"bytes,4,opt,name=rover_block_range,json=roverBlockRange,proto3,oneof"`
}

type RoverMessage_LatestBlock_ struct {
	LatestBlock *RoverMessage_LatestBlock `protobuf:"bytes,5,opt,name=latest_block,json=latestBlock,proto3,oneof"`
}

func (*RoverMessage_Resync_) isRoverMessage_Payload() {}

func (*RoverMessage_FetchBlock_) isRoverMessage_Payload() {}

func (*RoverMessage_RoverBlockRange_) isRoverMessage_Payload() {}

func (*RoverMessage_LatestBlock_) isRoverMessage_Payload() {}

type SettleTxCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PossibleTransactions []*SettleTxCheckReq_PossibleTransaction `protobuf:"bytes,1,rep,name=possible_transactions,json=possibleTransactions,proto3" json:"possible_transactions,omitempty"`
	BlockHash            string                                  `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BridgedChain         string                                  `protobuf:"bytes,3,opt,name=bridged_chain,json=bridgedChain,proto3" json:"bridged_chain,omitempty"`
}

func (x *SettleTxCheckReq) Reset() {
	*x = SettleTxCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleTxCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleTxCheckReq) ProtoMessage() {}

func (x *SettleTxCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleTxCheckReq.ProtoReflect.Descriptor instead.
func (*SettleTxCheckReq) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{3}
}

func (x *SettleTxCheckReq) GetPossibleTransactions() []*SettleTxCheckReq_PossibleTransaction {
	if x != nil {
		return x.PossibleTransactions
	}
	return nil
}

func (x *SettleTxCheckReq) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *SettleTxCheckReq) GetBridgedChain() string {
	if x != nil {
		return x.BridgedChain
	}
	return ""
}

type SettleTxCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkedTransactions []*MarkedTransaction `protobuf:"bytes,1,rep,name=marked_transactions,json=markedTransactions,proto3" json:"marked_transactions,omitempty"`
}

func (x *SettleTxCheckResponse) Reset() {
	*x = SettleTxCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleTxCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleTxCheckResponse) ProtoMessage() {}

func (x *SettleTxCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleTxCheckResponse.ProtoReflect.Descriptor instead.
func (*SettleTxCheckResponse) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{4}
}

func (x *SettleTxCheckResponse) GetMarkedTransactions() []*MarkedTransaction {
	if x != nil {
		return x.MarkedTransactions
	}
	return nil
}

type MarkedTxsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkedTransactions []*MarkedTransaction `protobuf:"bytes,1,rep,name=marked_transactions,json=markedTransactions,proto3" json:"marked_transactions,omitempty"`
	BlockHash          string               `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Blockchain         string               `protobuf:"bytes,3,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
}

func (x *MarkedTxsReq) Reset() {
	*x = MarkedTxsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkedTxsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkedTxsReq) ProtoMessage() {}

func (x *MarkedTxsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkedTxsReq.ProtoReflect.Descriptor instead.
func (*MarkedTxsReq) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{5}
}

func (x *MarkedTxsReq) GetMarkedTransactions() []*MarkedTransaction {
	if x != nil {
		return x.MarkedTransactions
	}
	return nil
}

func (x *MarkedTxsReq) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *MarkedTxsReq) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

type QueuedMarkedTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkedTransactions []*MarkedTransaction `protobuf:"bytes,1,rep,name=marked_transactions,json=markedTransactions,proto3" json:"marked_transactions,omitempty"`
	BlockHash          string               `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
}

func (x *QueuedMarkedTxsResponse) Reset() {
	*x = QueuedMarkedTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueuedMarkedTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuedMarkedTxsResponse) ProtoMessage() {}

func (x *QueuedMarkedTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuedMarkedTxsResponse.ProtoReflect.Descriptor instead.
func (*QueuedMarkedTxsResponse) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{6}
}

func (x *QueuedMarkedTxsResponse) GetMarkedTransactions() []*MarkedTransaction {
	if x != nil {
		return x.MarkedTransactions
	}
	return nil
}

func (x *QueuedMarkedTxsResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

type RoverMessage_FetchBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromBlock *Block `protobuf:"bytes,1,opt,name=from_block,json=fromBlock,proto3" json:"from_block,omitempty"`
	ToBlock   *Block `protobuf:"bytes,2,opt,name=to_block,json=toBlock,proto3" json:"to_block,omitempty"`
}

func (x *RoverMessage_FetchBlock) Reset() {
	*x = RoverMessage_FetchBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverMessage_FetchBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverMessage_FetchBlock) ProtoMessage() {}

func (x *RoverMessage_FetchBlock) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverMessage_FetchBlock.ProtoReflect.Descriptor instead.
func (*RoverMessage_FetchBlock) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{2, 0}
}

func (x *RoverMessage_FetchBlock) GetFromBlock() *Block {
	if x != nil {
		return x.FromBlock
	}
	return nil
}

func (x *RoverMessage_FetchBlock) GetToBlock() *Block {
	if x != nil {
		return x.ToBlock
	}
	return nil
}

type RoverMessage_LatestBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoverName string `protobuf:"bytes,1,opt,name=rover_name,json=roverName,proto3" json:"rover_name,omitempty"`
	Block     *Block `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *RoverMessage_LatestBlock) Reset() {
	*x = RoverMessage_LatestBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverMessage_LatestBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverMessage_LatestBlock) ProtoMessage() {}

func (x *RoverMessage_LatestBlock) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverMessage_LatestBlock.ProtoReflect.Descriptor instead.
func (*RoverMessage_LatestBlock) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{2, 1}
}

func (x *RoverMessage_LatestBlock) GetRoverName() string {
	if x != nil {
		return x.RoverName
	}
	return ""
}

func (x *RoverMessage_LatestBlock) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type RoverMessage_RoverBlockRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoverName     string `protobuf:"bytes,1,opt,name=rover_name,json=roverName,proto3" json:"rover_name,omitempty"`
	HighestHeight uint64 `protobuf:"varint,2,opt,name=highest_height,json=highestHeight,proto3" json:"highest_height,omitempty"`
	LowestHeight  uint64 `protobuf:"varint,3,opt,name=lowest_height,json=lowestHeight,proto3" json:"lowest_height,omitempty"`
	HighestHash   string `protobuf:"bytes,4,opt,name=highest_hash,json=highestHash,proto3" json:"highest_hash,omitempty"`
	LowestHash    string `protobuf:"bytes,5,opt,name=lowest_hash,json=lowestHash,proto3" json:"lowest_hash,omitempty"`
	Synced        string `protobuf:"bytes,6,opt,name=synced,proto3" json:"synced,omitempty"`
}

func (x *RoverMessage_RoverBlockRange) Reset() {
	*x = RoverMessage_RoverBlockRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverMessage_RoverBlockRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverMessage_RoverBlockRange) ProtoMessage() {}

func (x *RoverMessage_RoverBlockRange) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverMessage_RoverBlockRange.ProtoReflect.Descriptor instead.
func (*RoverMessage_RoverBlockRange) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{2, 2}
}

func (x *RoverMessage_RoverBlockRange) GetRoverName() string {
	if x != nil {
		return x.RoverName
	}
	return ""
}

func (x *RoverMessage_RoverBlockRange) GetHighestHeight() uint64 {
	if x != nil {
		return x.HighestHeight
	}
	return 0
}

func (x *RoverMessage_RoverBlockRange) GetLowestHeight() uint64 {
	if x != nil {
		return x.LowestHeight
	}
	return 0
}

func (x *RoverMessage_RoverBlockRange) GetHighestHash() string {
	if x != nil {
		return x.HighestHash
	}
	return ""
}

func (x *RoverMessage_RoverBlockRange) GetLowestHash() string {
	if x != nil {
		return x.LowestHash
	}
	return ""
}

func (x *RoverMessage_RoverBlockRange) GetSynced() string {
	if x != nil {
		return x.Synced
	}
	return ""
}

type RoverMessage_Resync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// latest know block we have in storage, can be empty
	LatestBlock *Block                          `protobuf:"bytes,1,opt,name=latest_block,json=latestBlock,proto3" json:"latest_block,omitempty"`
	Intervals   []*RoverMessage_Resync_Interval `protobuf:"bytes,2,rep,name=intervals,proto3" json:"intervals,omitempty"`
}

func (x *RoverMessage_Resync) Reset() {
	*x = RoverMessage_Resync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverMessage_Resync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverMessage_Resync) ProtoMessage() {}

func (x *RoverMessage_Resync) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverMessage_Resync.ProtoReflect.Descriptor instead.
func (*RoverMessage_Resync) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{2, 3}
}

func (x *RoverMessage_Resync) GetLatestBlock() *Block {
	if x != nil {
		return x.LatestBlock
	}
	return nil
}

func (x *RoverMessage_Resync) GetIntervals() []*RoverMessage_Resync_Interval {
	if x != nil {
		return x.Intervals
	}
	return nil
}

type RoverMessage_Resync_Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromBlock *Block `protobuf:"bytes,1,opt,name=from_block,json=fromBlock,proto3" json:"from_block,omitempty"`
	ToBlock   *Block `protobuf:"bytes,2,opt,name=to_block,json=toBlock,proto3" json:"to_block,omitempty"`
}

func (x *RoverMessage_Resync_Interval) Reset() {
	*x = RoverMessage_Resync_Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoverMessage_Resync_Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoverMessage_Resync_Interval) ProtoMessage() {}

func (x *RoverMessage_Resync_Interval) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoverMessage_Resync_Interval.ProtoReflect.Descriptor instead.
func (*RoverMessage_Resync_Interval) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{2, 3, 0}
}

func (x *RoverMessage_Resync_Interval) GetFromBlock() *Block {
	if x != nil {
		return x.FromBlock
	}
	return nil
}

func (x *RoverMessage_Resync_Interval) GetToBlock() *Block {
	if x != nil {
		return x.ToBlock
	}
	return nil
}

type SettleTxCheckReq_PossibleTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrTo       string `protobuf:"bytes,1,opt,name=addr_to,json=addrTo,proto3" json:"addr_to,omitempty"`
	AddrFrom     string `protobuf:"bytes,2,opt,name=addr_from,json=addrFrom,proto3" json:"addr_from,omitempty"`
	Value        []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	BridgedChain string `protobuf:"bytes,4,opt,name=bridged_chain,json=bridgedChain,proto3" json:"bridged_chain,omitempty"`
	TxId         string `protobuf:"bytes,5,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	BlockHeight  uint64 `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TokenType    string `protobuf:"bytes,7,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
}

func (x *SettleTxCheckReq_PossibleTransaction) Reset() {
	*x = SettleTxCheckReq_PossibleTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rover_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleTxCheckReq_PossibleTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleTxCheckReq_PossibleTransaction) ProtoMessage() {}

func (x *SettleTxCheckReq_PossibleTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_rover_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleTxCheckReq_PossibleTransaction.ProtoReflect.Descriptor instead.
func (*SettleTxCheckReq_PossibleTransaction) Descriptor() ([]byte, []int) {
	return file_rover_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SettleTxCheckReq_PossibleTransaction) GetAddrTo() string {
	if x != nil {
		return x.AddrTo
	}
	return ""
}

func (x *SettleTxCheckReq_PossibleTransaction) GetAddrFrom() string {
	if x != nil {
		return x.AddrFrom
	}
	return ""
}

func (x *SettleTxCheckReq_PossibleTransaction) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SettleTxCheckReq_PossibleTransaction) GetBridgedChain() string {
	if x != nil {
		return x.BridgedChain
	}
	return ""
}

func (x *SettleTxCheckReq_PossibleTransaction) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *SettleTxCheckReq_PossibleTransaction) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *SettleTxCheckReq_PossibleTransaction) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

var File_rover_proto protoreflect.FileDescriptor

var file_rover_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62,
	0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0a, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x48, 0x0a, 0x0f, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe8, 0x07, 0x0a, 0x0c, 0x52,
	0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x63, 0x2e, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x63,
	0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x79, 0x6e, 0x63, 0x12, 0x44, 0x0a, 0x0b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x63, 0x2e, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0a,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x54, 0x0a, 0x11, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f,
	0x76, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x47, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x66, 0x0a, 0x0a, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x1a, 0x52, 0x0a, 0x0b, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0xd8, 0x01, 0x0a, 0x0f, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68,
	0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x67, 0x68,
	0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x73,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f,
	0x77, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x63,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64,
	0x1a, 0xe7, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x31, 0x0a, 0x0c, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x44,
	0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x76,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x73, 0x1a, 0x64, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x2d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x29, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x07, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x9b, 0x03, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x78, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x63, 0x0a, 0x15, 0x70, 0x6f,
	0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x63, 0x2e, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x78, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x70, 0x6f, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x64, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x1a, 0xdd, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64,
	0x64, 0x72, 0x54, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x64, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x78, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x64, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x13, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x12, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x2a, 0x5d,
	0x0a, 0x10, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x79, 0x6e, 0x63, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x03, 0x32, 0xab, 0x03,
	0x0a, 0x05, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12,
	0x14, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x31, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x0e, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x1a, 0x0d, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x22, 0x00, 0x28, 0x01, 0x12, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x0d, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x1a, 0x0d, 0x2e, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x14, 0x49, 0x73, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x63, 0x2e, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x78, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x78, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x78, 0x73, 0x12, 0x16,
	0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64,
	0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x62, 0x63, 0x2e, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x54, 0x78,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1c, 0x5a, 0x1a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x6c, 0x2f, 0x73,
	0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rover_proto_rawDescOnce sync.Once
	file_rover_proto_rawDescData = file_rover_proto_rawDesc
)

func file_rover_proto_rawDescGZIP() []byte {
	file_rover_proto_rawDescOnce.Do(func() {
		file_rover_proto_rawDescData = protoimpl.X.CompressGZIP(file_rover_proto_rawDescData)
	})
	return file_rover_proto_rawDescData
}

var file_rover_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rover_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_rover_proto_goTypes = []interface{}{
	(RoverMessageType)(0),                        // 0: bc.rover.RoverMessageType
	(*RoverIdent)(nil),                           // 1: bc.rover.RoverIdent
	(*RoverSyncStatus)(nil),                      // 2: bc.rover.RoverSyncStatus
	(*RoverMessage)(nil),                         // 3: bc.rover.RoverMessage
	(*SettleTxCheckReq)(nil),                     // 4: bc.rover.SettleTxCheckReq
	(*SettleTxCheckResponse)(nil),                // 5: bc.rover.SettleTxCheckResponse
	(*MarkedTxsReq)(nil),                         // 6: bc.rover.MarkedTxsReq
	(*QueuedMarkedTxsResponse)(nil),              // 7: bc.rover.QueuedMarkedTxsResponse
	(*RoverMessage_FetchBlock)(nil),              // 8: bc.rover.RoverMessage.FetchBlock
	(*RoverMessage_LatestBlock)(nil),             // 9: bc.rover.RoverMessage.LatestBlock
	(*RoverMessage_RoverBlockRange)(nil),         // 10: bc.rover.RoverMessage.RoverBlockRange
	(*RoverMessage_Resync)(nil),                  // 11: bc.rover.RoverMessage.Resync
	(*RoverMessage_Resync_Interval)(nil),         // 12: bc.rover.RoverMessage.Resync.Interval
	(*SettleTxCheckReq_PossibleTransaction)(nil), // 13: bc.rover.SettleTxCheckReq.PossibleTransaction
	(*MarkedTransaction)(nil),                    // 14: bc.core.MarkedTransaction
	(*Block)(nil),                                // 15: bc.core.Block
	(*Null)(nil),                                 // 16: bc.core.Null
}
var file_rover_proto_depIdxs = []int32{
	0,  // 0: bc.rover.RoverMessage.type:type_name -> bc.rover.RoverMessageType
	11, // 1: bc.rover.RoverMessage.resync:type_name -> bc.rover.RoverMessage.Resync
	8,  // 2: bc.rover.RoverMessage.fetch_block:type_name -> bc.rover.RoverMessage.FetchBlock
	10, // 3: bc.rover.RoverMessage.rover_block_range:type_name -> bc.rover.RoverMessage.RoverBlockRange
	9,  // 4: bc.rover.RoverMessage.latest_block:type_name -> bc.rover.RoverMessage.LatestBlock
	13, // 5: bc.rover.SettleTxCheckReq.possible_transactions:type_name -> bc.rover.SettleTxCheckReq.PossibleTransaction
	14, // 6: bc.rover.SettleTxCheckResponse.marked_transactions:type_name -> bc.core.MarkedTransaction
	14, // 7: bc.rover.MarkedTxsReq.marked_transactions:type_name -> bc.core.MarkedTransaction
	14, // 8: bc.rover.QueuedMarkedTxsResponse.marked_transactions:type_name -> bc.core.MarkedTransaction
	15, // 9: bc.rover.RoverMessage.FetchBlock.from_block:type_name -> bc.core.Block
	15, // 10: bc.rover.RoverMessage.FetchBlock.to_block:type_name -> bc.core.Block
	15, // 11: bc.rover.RoverMessage.LatestBlock.block:type_name -> bc.core.Block
	15, // 12: bc.rover.RoverMessage.Resync.latest_block:type_name -> bc.core.Block
	12, // 13: bc.rover.RoverMessage.Resync.intervals:type_name -> bc.rover.RoverMessage.Resync.Interval
	15, // 14: bc.rover.RoverMessage.Resync.Interval.from_block:type_name -> bc.core.Block
	15, // 15: bc.rover.RoverMessage.Resync.Interval.to_block:type_name -> bc.core.Block
	1,  // 16: bc.rover.Rover.Join:input_type -> bc.rover.RoverIdent
	15, // 17: bc.rover.Rover.CollectBlock:input_type -> bc.core.Block
	2,  // 18: bc.rover.Rover.ReportSyncStatus:input_type -> bc.rover.RoverSyncStatus
	10, // 19: bc.rover.Rover.ReportBlockRange:input_type -> bc.rover.RoverMessage.RoverBlockRange
	4,  // 20: bc.rover.Rover.IsBeforeSettleHeight:input_type -> bc.rover.SettleTxCheckReq
	6,  // 21: bc.rover.Rover.GetQueuedMarkedTxs:input_type -> bc.rover.MarkedTxsReq
	3,  // 22: bc.rover.Rover.Join:output_type -> bc.rover.RoverMessage
	16, // 23: bc.rover.Rover.CollectBlock:output_type -> bc.core.Null
	16, // 24: bc.rover.Rover.ReportSyncStatus:output_type -> bc.core.Null
	16, // 25: bc.rover.Rover.ReportBlockRange:output_type -> bc.core.Null
	5,  // 26: bc.rover.Rover.IsBeforeSettleHeight:output_type -> bc.rover.SettleTxCheckResponse
	7,  // 27: bc.rover.Rover.GetQueuedMarkedTxs:output_type -> bc.rover.QueuedMarkedTxsResponse
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_rover_proto_init() }
func file_rover_proto_init() {
	if File_rover_proto != nil {
		return
	}
	file_core_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rover_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverIdent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverSyncStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleTxCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleTxCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkedTxsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueuedMarkedTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverMessage_FetchBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverMessage_LatestBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverMessage_RoverBlockRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverMessage_Resync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoverMessage_Resync_Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rover_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleTxCheckReq_PossibleTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rover_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*RoverMessage_Resync_)(nil),
		(*RoverMessage_FetchBlock_)(nil),
		(*RoverMessage_RoverBlockRange_)(nil),
		(*RoverMessage_LatestBlock_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rover_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rover_proto_goTypes,
		DependencyIndexes: file_rover_proto_depIdxs,
		EnumInfos:         file_rover_proto_enumTypes,
		MessageInfos:      file_rover_proto_msgTypes,
	}.Build()
	File_rover_proto = out.File
	file_rover_proto_rawDesc = nil
	file_rover_proto_goTypes = nil
	file_rover_proto_depIdxs = nil
}
